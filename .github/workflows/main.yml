name: Build APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
    # 1. Repository-ni klonlash
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Python va Buildozer oâ€˜rnatish
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3 python3-pip build-essential git zip unzip openjdk-11-jdk
        pip install --upgrade pip
        pip install buildozer cython

    # 3. Android SDK va NDK yuklash
    - name: Install Android SDK and NDK
      run: |
        sudo apt install -y wget
        wget https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip
        mkdir -p $HOME/android-sdk
        unzip commandlinetools-linux-8092744_latest.zip -d $HOME/android-sdk/cmdline-tools
        mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/tools
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/platform-tools:$PATH
        sdkmanager --install "build-tools;33.0.2" "platforms;android-33" "platform-tools" "ndk;23.1.7779620"
        yes | sdkmanager --licenses

    # 4. Buildozer yordamida APK yaratish
    - name: Build APK
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/platform-tools:$PATH
        buildozer -v android debug

    # 5. APK faylini chiqarish
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: CounterApp-debug.apk
        path: bin/*.apk
